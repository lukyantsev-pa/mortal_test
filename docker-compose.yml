services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGOPTIONS: "-c work_mem=64MB -c maintenance_work_mem=2GB -c effective_cache_size=4GB"
    command:
      - "postgres"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "effective_io_concurrency=200"
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - ./data:/data
      - postgres_data:/var/lib/postgresql/data
    ports:
      - ${DB_PORT:-5432}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - ${PGADMIN_PORT:-5050}:80
    depends_on:
      - postgres
  api_mortality:
    build:
      context: api
      dockerfile: Dockerfile
    container_name: api_mortality
    environment:
      DATABASE_URL: postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      DATABASE_POOL_SIZE: ${API_DB_POOL_SIZE}
      DATABASE_MAX_OVERFLOW: ${API_DB_MAX_OVERFLOW}
    depends_on:
      - postgres
    restart: always
    command: >
      gunicorn -b 0.0.0.0:5000 main:app
      -k uvicorn.workers.UvicornWorker
      -w ${API_WORKERS}
    ports:
      - ${API_PORT:-5000}:5000

volumes:
  postgres_data:
